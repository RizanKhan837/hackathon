import React, { useState } from "react";
import { PDFDocument } from "pdfjs-dist";

const Dropzone = ({ onFileSelected }) => {
  const [file, setFile] = useState(null);

  const handleFileChange = (e) => {
    const file = e.target.files[0];
    setFile(file);
    onFileSelected(file);
  };

  return (
    <form>
      <div className="flex items-center justify-center w-full">
        <label htmlFor="dropzone-file" className="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-200 hover:bg-gray-400">
          <div className="flex flex-col items-center justify-center pt-5 pb-6">
            <svg aria-hidden="true" className="w-10 h-10 mb-3 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
            </svg>
            <p className="mb-2 text-sm text-gray-700"><span className="font-semibold">Click to upload</span> or drag and drop</p>
            <p className="text-xs text-gray-700">PDF's Only</p>
          </div>
          <input id="dropzone-file" type="file" className="hidden" onChange={handleFileChange} />
        </label>
      </div>
    </form>
  );
};

const App = () => {
  const [text, setText] = useState("");

  const handleFileSelected = (file) => {
    const pdfDoc = new PDFDocument();
    pdfDoc.load(file);

    let text = "";
    for (let page of pdfDoc.pages) {
      text += page.text;
    }

    setText(text);
  };

  return (
    <div>
      <Dropzone onFileSelected={handleFileSelected} />
      <p>Text: {text}</p>
    </div>
  );
};

export default App;



import React, { useState, useEffect } from 'react';
import { PDFJS } from 'pdfjs-dist';

const Dropzone = ({ handleUpload }) => {
  const [file, setFile] = useState(null);

  useEffect(() => {
    if (file) {
      // Read the PDF file content
      const pdf = new PDFJS(`${file}`);
      const content = pdf.getTextContent();

      // Call the handleUpload function with the PDF content
      handleUpload(content);
    }
  }, [file]);

  const handleDrop = (event) => {
    const files = event.target.files;

    if (files.length) {
      setFile(files[0]);
    }
  };

  return (
    <form onDrop={handleDrop}>
      <div className="flex items-center justify-center w-full">
        <label htmlFor="dropzone-file" className="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-200 hover:bg-gray-400">
          <div className="flex flex-col items-center justify-center pt-5 pb-6">
            <svg aria-hidden="true" className="w-10 h-10 mb-3 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
            </svg>
            <p className="mb-2 text-sm text-gray-700"><span className="font-semibold">Click to upload</span> or drag and drop</p>
            <p className="text-xs text-gray-700">PDF's Only</p>
          </div>
          <input id="dropzone-file" type="file" className="hidden" />
        </label>
      </div>
    </form>
  );
};

export default Dropzone;
